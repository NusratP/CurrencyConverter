// <auto-generated />
using System;
using CurrencyLoader.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CurrencyLoader.Migrations
{
    [DbContext(typeof(CurrencyContext))]
    [Migration("20221001135100_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CurrencyLoader.Data.CurrencyDetails", b =>
                {
                    b.Property<int>("CurrencyDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("baseCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("CurrencyDetailsId");

                    b.ToTable("CurrencyDetails");
                });

            modelBuilder.Entity("CurrencyLoader.Data.CurrencyRates", b =>
                {
                    b.Property<int>("CurrencyRatesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CurrencyDetailsId")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.HasKey("CurrencyRatesId");

                    b.HasIndex("CurrencyDetailsId");

                    b.ToTable("CurrencyRates");
                });

            modelBuilder.Entity("CurrencyLoader.Data.CurrencyRates", b =>
                {
                    b.HasOne("CurrencyLoader.Data.CurrencyDetails", "CurrencyDetails")
                        .WithMany("CurrencyRates")
                        .HasForeignKey("CurrencyDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
